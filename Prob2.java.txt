class Solution {
    
    int[][] dirs = {{-1,0},{0,1},{1,0},{0,-1}};
    
    public boolean exist(char[][] board, String word) {
        
        if(board == null || word == null || board.length == 0 || word.length() == 0)
            return false;
        
        for(int i=0;i<board.length;i++){
            for(int j=0;j<board[0].length;j++){
                if(helper(board,i,j,0,word)){
                    return true;
                }
            }
        }
        return false;
        
    }
    
    
    private boolean helper(char[][] board,int i,int j,int index, String word){
        //base
        
        
        if(index == word.length()){
            return true;
        }
        
        if(i<0 || i== board.length || j<0 || j==board[0].length || board[i][j] == '#')
            return false;
        
        if(board[i][j] == word.charAt(index)){
            char ch = board[i][j];
            board[i][j] = '#';
            for(int[] dir : dirs){
                int r = i+dir[0];
                int c = j+dir[1];
                if(helper(board,r,c,index+1,word)) return true;
            }
            board[i][j] = ch;
        }
        
        return false;
        
    }
}