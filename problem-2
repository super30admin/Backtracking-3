class Solution {
    int[][] dirs={{0,1},{1,0},{-1,0},{0,-1}};
    int n;
    int m;
    public boolean exist(char[][] board, String word) {
         n=board.length;
         m=board[0].length;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(dfs(board,i,j,word,0)) return true;
            }
        }
        
      return false;  
        
    }
    public boolean dfs(char[][] board,int i,int j,String word,int index){
        if(index==word.length()){
            return true;
        }
        if(i<0 || j<0 || i>=n ||j>=m || board[i][j]=='#') return false;
        
        if(board[i][j]==word.charAt(index)){
            char c=board[i][j];
            board[i][j]='#';
            for(int[] dir:dirs){
                int nr=i+dir[0];
                int nc=j+dir[1];
                if(dfs(board,nr,nc,word,index+1)) return true;
            }
            
            board[i][j]=c;
        }
        return false;
    }
}
